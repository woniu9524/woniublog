<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on ZhangChengのBlog</title><link>https://woniu9524.github.io/woniublog/tags/git/</link><description>Recent content in Git on ZhangChengのBlog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 15 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://woniu9524.github.io/woniublog/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Revert 使用指南</title><link>https://woniu9524.github.io/woniublog/p/git-revert-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link><pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate><guid>https://woniu9524.github.io/woniublog/p/git-revert-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid><description>&lt;img src="https://woniu9524.github.io/woniublog/p/git-revert-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/cover.jpg" alt="Featured image of post Git Revert 使用指南" />&lt;h1 id="git-revert-使用指南">Git Revert 使用指南
&lt;/h1>&lt;blockquote>
&lt;p>使用revert撤销一个提交&lt;/p>&lt;/blockquote>
&lt;h2 id="什么是-git-revert">什么是 Git Revert？
&lt;/h2>&lt;p>Git revert 是一个用于撤销之前的某个提交的命令。与 &lt;code>git reset&lt;/code> 不同，&lt;code>git revert&lt;/code> 不会删除任何历史记录，而是通过创建一个新的提交来撤销指定提交的更改。&lt;/p>
&lt;h2 id="为什么使用-revert">为什么使用 Revert？
&lt;/h2>&lt;ul>
&lt;li>安全：不改变提交历史，适合在共享分支上使用。&lt;/li>
&lt;li>可追踪：撤销操作本身被记录为一个新的提交。&lt;/li>
&lt;li>灵活：可以撤销任何历史提交，而不仅仅是最近的几个。&lt;/li>
&lt;/ul>
&lt;h2 id="如何使用-revert">如何使用 Revert
&lt;/h2>&lt;h3 id="基本用法">基本用法
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>找到要撤销的提交的 hash：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git log --oneline
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>执行 revert 命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git revert &amp;lt;commit-hash&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>解决可能出现的冲突（如果有的话）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提交 revert 更改：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git commit -m &amp;#34;Revert &amp;#39;xxx&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="示例">示例
&lt;/h3>&lt;p>假设我们有以下提交历史：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">abc1234 (HEAD -&amp;gt; main) Add feature C
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def5678 Add feature B (要撤销的提交)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ghi9101 Add feature A
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>要撤销 &amp;ldquo;Add feature B&amp;rdquo; 的提交，我们可以：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git revert def5678
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将创建一个新的提交，撤销 &amp;ldquo;Add feature B&amp;rdquo; 的更改。&lt;/p>
&lt;h3 id="撤销多个提交">撤销多个提交
&lt;/h3>&lt;p>要撤销多个连续的提交，可以使用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git revert HEAD~3..HEAD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将撤销最近的三个提交。&lt;/p>
&lt;h3 id="只创建-revert-提交而不自动提交">只创建 Revert 提交而不自动提交
&lt;/h3>&lt;p>如果你想在提交前检查 revert 的结果：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git revert -n &amp;lt;commit-hash&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这会将更改添加到工作目录和暂存区，但不会自动创建新的提交。&lt;/p>
&lt;h2 id="注意事项">注意事项
&lt;/h2>&lt;ol>
&lt;li>确保在执行 revert 前，你的工作目录是干净的。&lt;/li>
&lt;li>如果 revert 的提交与之后的提交有冲突，你可能需要手动解决这些冲突。&lt;/li>
&lt;li>对于已经推送到远程仓库的提交，使用 revert 比使用 reset 更安全。&lt;/li>
&lt;li>git revert 操作时，Git 不允许在有未提交更改的情况下执行 revert，以防止你的本地修改被意外覆盖。&lt;/li>
&lt;/ol></description></item></channel></rss>